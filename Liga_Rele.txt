////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Arquivo:   NodeMCU_acesso_Externo
//Tipo:      Codigo-fonte para utilizar no NodeMCU ESP8266
//Autor:     João Mariano da Silva
//Descricao: Controle de duas saidas uma lig/desliga e a outra só um pulso   
////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <ESP8266WiFi.h>
#include <Ethernet.h>


const char* ssid = "xxxxxxx";  //Nome da sua rede Wifi
const char* password = "xxxxxxxxxxx";  //Senha da rede
IPAddress ip(192, 168, 0, 000);       // crie um IP livre em sua rede. Esse será o valor que vai ser digitado no browser
IPAddress gateway(192, 168, 0, 0); //IP do roteador da sua rede wifi
IPAddress subnet(255, 255, 255, 0); //Mascara de rede da sua rede wifi
WiFiServer server(8787);          //Voce tem que Redireciona uma porta no seu roteador

uint8_t saida = D5; //saidao do NodeMCU que estara conectado ao rele

const int saida2 = D2;          


void setup() {  
  
   pinMode(saida2, OUTPUT);
   digitalWrite(saida2, LOW);

    //saídas começará em HIGH ou LOW quando o sistema for iniciado
  pinMode(saida, OUTPUT);  
  digitalWrite(saida, LOW);

  //Conectando a rede Wifi
  WiFi.config(ip, gateway, subnet);
  WiFi.begin(ssid, password);  
  
  //Verificando se esta conectado,
  //caso contrario, espera um pouco e verifica de novo.
  while (WiFi.status() != WL_CONNECTED) {
    delay(1);
  }
  //Iniciando o servidor Web
  server.begin();
}

void loop() {    
  
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
  
  while (!client.available()) {
    delay(500);
  } 
  String req = client.readStringUntil('\r');    
 
  if(req == "GET /favicon.ico HTTP/1.1"){
      req = client.readStringUntil('\r');
  }
  
  client.flush();
  if (req.indexOf("rele_on") != -1){
    digitalWrite(D5, HIGH);
    saida = HIGH;
  } else if (req.indexOf("rele_off") != -1) {
    digitalWrite(D5, LOW);
    saida = LOW;
  }
  else {
    Serial.println("Requisicao invalida");
  }

 //Pagina HTML
  String buf = "";
  buf += "<html lang=\"en\"><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\"/>\r\n";
  buf += "<title>WebServer ESP8266</title>";
  buf += "<style>.c{text-align: center;} div,input{padding:5px;font-size:1em;} input{width:80%;} body{text-align: center;font-family:verdana;} button{border:0;border-radius:0.3rem;background-color:#1fa3ec;color:#fff;line-height:2.4rem;font-size:1.2rem;width:100%;} .q{float: right;width: 64px;text-align: right;}</style>";
  buf += "</head>";
  buf += "<h3> ESP8266 Web Server</h3>"; 
    
  if(saida)
    buf += "<div><h4>Radio Ligado na Copa D5</h4><a href=\"?function=rele_off\"><button><div><style>.c{text-align: center;}</div> div,input{padding:10px 30px;font-size:1em;} input{width:80%;} body{text-align: center;font-family:verdana;} button{border:0;border-radius:0.3rem;background-color:#00ff6c;color:#00ff6c;line-height:2.4rem;font-size:1.2rem;width:100%;} .q{float: right;width: 64px;text-align: right;}</style>"; 
  else
    buf += "<div><h4>Radio na Copa Desliigado no Momento D5</h4><a href=\"?function=rele_on\"><button>Desligado</button></a></div>";
 
  buf += "<h4>Criado por Joao Mariano</h4>";
  buf += "</html>\n";
 


String bufs = "";
bufs += "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE HTML>\r\n";
bufs += "<head> ";
bufs += "<meta charset='UTF-8'> ";
bufs += "<meta http-equiv='cache-control' content='max-age=0' /> ";
bufs += "<meta http-equiv='cache-control' content='no-cache' /> ";
bufs += "<meta http-equiv='expires' content='0' /> ";
bufs += "<meta http-equiv='expires' content='Tue, 01 Jan 1980 1:00:00 GMT' /> ";
bufs += "<meta http-equiv='pragma' content='no-cache' /> ";
bufs += "<title>Automa&ccedil;&atilde;o Residencial</title> ";
bufs += "<style> ";
bufs += "body{font-family:Open Sans; color:#555555;} ";
bufs += "h1{font-size:24px; font-weight:normal; margin:0.4em 0;} ";
bufs += ".container { width: 100%; margin: 0 auto; } ";
bufs += ".container .row { float: left; clear: both; width: 100%; } ";
bufs += ".container .col { float: left; margin: 0 0 1.2em; padding-right: 1.2em; padding-left: 1.2em; } ";
bufs += ".container .col.four, .container .col.twelve { width: 100%; } ";
bufs += "@media screen and (min-width: 767px) { ";
bufs += ".container{width: 100%; max-width: 1080px; margin: 0 auto;} ";
bufs += ".container .row{width:100%; float:left; clear:both;} ";
bufs += ".container .col{float: left; margin: 0 0 1em; padding-right: .5em; padding-left: .5em;} ";
bufs += ".container .col.four { width: 50%; } ";
bufs += ".container .col.tweleve { width: 100%; } ";
bufs += "} ";
bufs += "* {-moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;} ";
bufs += "a{text-decoration:none;} ";
bufs += ".btn {font-size: 18px; white-space:nowrap; width:100%; padding:.8em 1.5em; font-family: Open Sans, Helvetica,Arial,sans-serif; ";
bufs += "line-height:18px; display: inline-block;zoom: 1; color: #fff; text-align: center; position:relative; ";
bufs += "-webkit-transition: border .25s linear, color .25s linear, background-color .25s linear; ";
bufs += "transition: border .25s linear, color .25s linear, background-color .25s linear;} ";
bufs += ".btn.btn-sea{background-color: #08bc9a; border-color: #08bc9a; -webkit-box-shadow: 0 3px 0 #088d74; box-shadow: 0 3px 0 #088d74;} ";
bufs += ".btn.btn-sea:hover{background-color:#01a183;} ";
bufs += ".btn.btn-sea:active{ top: 3px; outline: none; -webkit-box-shadow: none; box-shadow: none;} ";
bufs += "</style> ";
bufs += "</head> ";
bufs += "<body> ";
bufs += "<div class='container'> ";
bufs += "<div class='row'> ";
bufs += "<div class='col twelve'> ";

bufs += "<p align='center'><font size='10'>Controle ESP8266</font></p> ";
bufs += "</div> ";
bufs += "</div> ";
bufs += "<div class='row'> ";
bufs += "<div class='col four'> ";

bufs += "<a href=\"?function=lamp_quarto_R\" class='btn btn-sea'>Liga/Desliga por 3 Segundos D2</a> ";
bufs += "</div> ";
bufs += "</div> ";
  
client.print(bufs);

if (req.indexOf("lamp_quarto_R") != -1)
{

digitalWrite(saida2,HIGH);
delay(1000);

digitalWrite(saida2,LOW);
}  
  client.print(buf);
  client.flush();
  client.stop();
 
  Serial.println("Cliente desconectado!");
   }


 
